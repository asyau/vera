version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: vera-postgres
    environment:
      POSTGRES_USER: vera
      POSTGRES_PASSWORD: password
      POSTGRES_DB: vera
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./vera_backend/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vera"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: vera-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./vera_backend
      dockerfile: Dockerfile
    container_name: vera-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://vera:password@postgres:5432/vera
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./vera_backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend
  frontend:
    build:
      context: ./vera_frontend
      dockerfile: Dockerfile
    container_name: vera-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000

volumes:
  postgres_data:
  redis_data:
